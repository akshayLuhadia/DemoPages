{"version":3,"sources":["components/ProductList.js","productsData.js","components/EditProduct.js","redux/actions/productActions.js","redux/actions/types.js","redux/reducers/productsReducer.js","redux/reducers/index.js","redux/store/store.js","serviceWorker.js","index.js","ProductApp.js"],"names":["_columns","key","name","fieldName","minWidth","maxWidth","isResizable","connect","state","products","productsData","map","item","productItem","isEditable","edit","to","id","mapItem","Fabric","length","DetailsList","columns","items","pricingInfo","budget","premier","options","text","pricingInfoItems","EditProduct","props","product","weight","availability","productUrl","pricingTier","priceRange","onChange","bind","onSubmit","onChoiceChange","onChangeCheckbox","e","this","setState","target","value","checked","option","preventDefault","updateProduct","history","push","Label","htmlFor","TextField","defaultValue","required","type","ChoiceGroup","selectedKey","Dropdown","defaultSelectedKey","Toggle","defaultChecked","onText","offText","style","textAlign","DefaultButton","PrimaryButton","Component","parseInt","match","params","find","payload","initialState","combineReducers","action","createStore","rootReducer","Boolean","window","location","hostname","ReactDOM","render","store","className","exact","path","component","ProductList","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8c03c38a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Fabric } from \"office-ui-fabric-react/lib/Fabric\";\r\nimport { DetailsList } from \"office-ui-fabric-react/lib/DetailsList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./ProductList.css\";\r\n\r\nconst _columns = [\r\n  {\r\n    key: \"column1\",\r\n    name: \"Name\",\r\n    fieldName: \"name\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n  },\r\n  {\r\n    key: \"column2\",\r\n    name: \"Weight\",\r\n    fieldName: \"weight\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n  },\r\n  {\r\n    key: \"column3\",\r\n    name: \"Availability\",\r\n    fieldName: \"availability\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n  },\r\n  {\r\n    key: \"column3\",\r\n    name: \"\",\r\n    fieldName: \"edit\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n  },\r\n];\r\n\r\nconst ProductList = ({ products }) => (\r\n  <Fabric>\r\n    <div>\r\n      <h1>Product List</h1>\r\n      {products && products.length ? (\r\n        <DetailsList\r\n          columns={_columns}\r\n          // selectionMode=\"single\"\r\n          items={products}\r\n        ></DetailsList>\r\n      ) : (\r\n        \"No products found\"\r\n      )}\r\n    </div>\r\n  </Fabric>\r\n);\r\n\r\nconst mapItem = (products) => {\r\n  return products.map((item) => {\r\n    let productItem = item;\r\n    if (productItem.isEditable) {\r\n      productItem.edit = (\r\n        <Link to={`/Products/edit-product/${productItem.id}`}>\r\n          <button>EDIT</button>\r\n        </Link>\r\n      );\r\n    } else {\r\n      productItem.edit = \"\";\r\n    }\r\n    return productItem;\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  let products = state.productsData.products;\r\n  products = mapItem(products);\r\n  return { products };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductList);\r\n","export const products = [\r\n    {\r\n        name: \"Micromax A57\",\r\n        pricingTier: \"budget\",\r\n        priceRange: \"5k-8k\",\r\n        weight: 200, // In grams,\r\n        availability: 100,\r\n        productUrl: \"https://e...content-available-to-author-only...e.com/mma57\",\r\n        isEditable: true\r\n    },\r\n    {\r\n        name: \"OnePlus 6T\",\r\n        pricingTier: \"premier\",\r\n        priceRange: \"35k-45k\",\r\n        weight: 200, // In grams\r\n        availability: 30,\r\n        productUrl: \"https://e...content-available-to-author-only...e.com/op6t\",\r\n        isEditable: true\r\n    },\r\n    {\r\n        name: \"Redmi Ultra\",\r\n        pricingTier: \"budget\",\r\n        priceRange: \"8k-11k\",\r\n        weight: 150, // In grams\r\n        availability: 50,\r\n        productUrl: \"https://e...content-available-to-author-only...e.com/redmiu\",\r\n        isEditable: true\r\n    }\r\n]\r\n\r\nexport const pricingInfo = {\r\n    budget: [\r\n        \"4k-6k\",\r\n        \"5k-8k\",\r\n        \"8k-11k\"\r\n    ],\r\n    premier: [\r\n        \"23k-28k\",\r\n        \"30k-34k\",\r\n        \"35k-45k\"\r\n    ]\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { pricingInfo } from \"../productsData\";\r\nimport { Dropdown } from \"office-ui-fabric-react/lib/Dropdown\";\r\nimport { updateProduct } from \"../redux/actions/productActions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { TextField } from \"office-ui-fabric-react/lib/TextField\";\r\nimport { Label } from \"office-ui-fabric-react/lib/Label\";\r\nimport { Toggle } from \"office-ui-fabric-react/lib/Toggle\";\r\nimport { ChoiceGroup } from \"office-ui-fabric-react/lib/ChoiceGroup\";\r\nimport { Fabric } from \"office-ui-fabric-react/lib/Fabric\";\r\nimport { DefaultButton, PrimaryButton } from \"office-ui-fabric-react\";\r\n\r\nconst options = [\r\n  { key: \"budget\", text: \"Budget\" },\r\n  { key: \"premier\", text: \"Premier\" },\r\n];\r\n\r\nlet pricingInfoItems = {\r\n  budget: pricingInfo[\"budget\"].map((item, key) => {\r\n    return { key: item, text: item };\r\n  }),\r\n  premier: pricingInfo[\"premier\"].map((item, key) => {\r\n    return { key: item, text: item };\r\n  }),\r\n};\r\n\r\nclass EditProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChoiceChange = this.onChoiceChange.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n  }\r\n  state = {\r\n    name: this.props.product ? this.props.product.name : null,\r\n    weight: this.props.product ? this.props.product.weight : null,\r\n    availability: this.props.product ? this.props.product.availability : null,\r\n    productUrl: this.props.product ? this.props.product.productUrl : null,\r\n    pricingTier: this.props.product ? this.props.product.pricingTier : null,\r\n    priceRange: this.props.product ? this.props.product.priceRange : null,\r\n    isEditable: this.props.product ? this.props.product.isEditable : null,\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    this.setState({ [e.target.name]: e.target.checked });\r\n  }\r\n\r\n  onChoiceChange(e, option) {\r\n    this.setState({ [e.target.name]: option.key });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const product = {\r\n      id: this.props.product.id,\r\n      name: this.state.name,\r\n      weight: this.state.weight,\r\n      availability: this.state.availability,\r\n      productUrl: this.state.productUrl,\r\n      pricingTier: this.state.pricingTier,\r\n      priceRange: this.state.priceRange,\r\n      isEditable: this.state.isEditable,\r\n    };\r\n    this.props.updateProduct(product);\r\n    this.props.history.push(\"/Products\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fabric>\r\n        <h3>EDIT PRODUCT</h3>\r\n        {this.props.product != null ? (\r\n          <form onSubmit={this.onSubmit}>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <Label htmlFor=\"productName\">Name: </Label>\r\n                  </td>\r\n                  <td>\r\n                    <TextField\r\n                      name=\"name\"\r\n                      id=\"productName\"\r\n                      defaultValue={this.state.name}\r\n                      onChange={this.onChange}\r\n                      required\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Label htmlFor=\"productWeight\">Weight: </Label>\r\n                  </td>\r\n                  <td>\r\n                    <TextField\r\n                      type=\"text\"\r\n                      name=\"weight\"\r\n                      id=\"productWeight\"\r\n                      defaultValue={this.state.weight}\r\n                      onChange={this.onChange}\r\n                      required\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Label htmlFor=\"productAvailability\">Availability: </Label>\r\n                  </td>\r\n                  <td>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      name=\"availability\"\r\n                      id=\"productAvailability\"\r\n                      defaultValue={this.state.availability}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Label htmlFor=\"productURL\">Product Url: </Label>\r\n                  </td>\r\n                  <td>\r\n                    <TextField\r\n                      type=\"text\"\r\n                      name=\"url\"\r\n                      id=\"productURL\"\r\n                      defaultValue={this.state.productUrl}\r\n                      onChange={this.onChange}\r\n                      required\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Label>Price Tier </Label>\r\n                  </td>\r\n                  <td>\r\n                    <ChoiceGroup\r\n                      selectedKey={this.state.pricingTier}\r\n                      options={options}\r\n                      onChange={this.onChoiceChange}\r\n                      name=\"pricingTier\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Label htmlFor=\"productPriceRange\">Price Range</Label>\r\n                  </td>\r\n                  <td>\r\n                    <Dropdown\r\n                      id=\"productPriceRange\"\r\n                      options={pricingInfoItems[this.state.pricingTier]}\r\n                      defaultSelectedKey={this.state.priceRange}\r\n                      onChange={(e, option) =>\r\n                        this.setState({ priceRange: option.text })\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Label htmlFor=\"productIsEditable\">Is Editable</Label>\r\n                  </td>\r\n                  <td>\r\n                    <Toggle\r\n                      defaultChecked={this.state.isEditable}\r\n                      onText=\"Editable\"\r\n                      offText=\"Not Editable\"\r\n                      onChange={this.onChangeCheckbox}\r\n                      name=\"isEditable\"\r\n                      id=\"productIsEditable\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ textAlign: \"center\" }}>\r\n                    <NavLink to={\"/Products\"}>\r\n                      <DefaultButton text=\"Back\" />\r\n                    </NavLink>\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>\r\n                    <PrimaryButton type=\"submit\" text=\"Submit\" />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n        ) : (\r\n          <h3>No product found!</h3>\r\n        )}\r\n      </Fabric>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  if (parseInt(props.match.params.id)) {\r\n    return {\r\n      product: state.productsData.products.find(\r\n        (item) => item.id === parseInt(props.match.params.id)\r\n      )\r\n        ? state.productsData.products.find(\r\n            (item) => item.id === parseInt(props.match.params.id)\r\n          )\r\n        : null,\r\n    };\r\n  }\r\n\r\n  return { product: null };\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateProduct })(EditProduct);\r\n","import { GET_ALL_PRODUCTS, UPDATE_PRODUCT } from './types';\r\n\r\nexport const getAllProducts = () => ({\r\n    type: GET_ALL_PRODUCTS,\r\n    payload: {}\r\n});\r\n\r\nexport const updateProduct = (product) => ({\r\n    type: UPDATE_PRODUCT,\r\n    payload: { product }\r\n});","export const GET_ALL_PRODUCTS = \"GET_ALL_PRODUCTS\";\r\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";","import { UPDATE_PRODUCT, GET_ALL_PRODUCTS } from '../actions/types';\r\nimport { products } from '../../productsData';\r\n\r\nconst productsData = products.map((item, key) => { return { ...item, id: key + 1 } });\r\nconst initialState = {\r\n    products: productsData\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ALL_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: productsData\r\n            }\r\n        case UPDATE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: state.products.map((item) => {\r\n                    if (item.id === action.payload.product.id) {\r\n                        return action.payload.product;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport productsData from './productsReducer';\r\n\r\nexport default combineReducers({ productsData });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from '../reducers';\r\n\r\nexport default createStore(rootReducer);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProductApp from './ProductApp';\r\nimport store from './redux/store/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ProductApp />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport ProductList from \"./components/ProductList\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport EditProduct from \"./components/EditProduct\";\r\n\r\nexport default function ProductApp() {\r\n  return (\r\n    <div className=\"product-app\">\r\n      <Router>\r\n        <div>\r\n          <Route exact path=\"/Products\" component={ProductList} />\r\n          <Route path=\"/Products/edit-product/:id\" component={EditProduct} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}